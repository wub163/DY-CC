/***********************************************************************
文件名称：CAN.C
功    能：
编写时间：2013.4.25
编 写 人：
注    意：
***********************************************************************/
#include "main.h"

unsigned char CAN1_data[8];
int16_t Sum_data[20];
int32_t SumVel;
CanRxMsg CanMsg;
unsigned char can1_rec_flag = 0;
unsigned int CAN_Time_Out = 0;
unsigned char can_tx_success_flag = 0;




/*
*----------------------------------------------------------------------
???: CANBus_Messagehandling
?  ?:can??????????
?  ?:can?????
???:?
*----------------------------------------------------------------------
*/
void CANBus_Messagehandling(CanRxMsg* RxMessage)
{
  int8_t i,s,n;
		for(i = 0;i < 8;i ++)
		{
			CAN1_data[i] = 	RxMessage->Data[i];
		}
		for(i = 18; i >= 0; i--)
		{
				Sum_data[i+1] = Sum_data[i];
		}
		Sum_data[0] = (int16_t)((uint16_t)(CAN1_data[2]<<8)|(uint16_t)(CAN1_data[3]));
		if(Sum_data[0] == 0)
		{
				cha_state.wheelst.FdbMotorVel = 0;
				memset(Sum_data,0,20);
		}
		else
		{
				SumVel = 0;
				n = 0;
				for(s = 0; s < 20; s++)
				{
					if(abs(Sum_data[s]) > 5)
					{
						n++;
						SumVel += Sum_data[s];
					}
				}
				cha_state.wheelst.FdbMotorVel = (int16_t)(SumVel/n);
		}
}
/***********************************************************************
函数名称：CAN1_RX0_IRQHandler(void)
功    能：CAN1中断函数
输入参数：
输出参数：CAN1_data[8]
编写时间：
编 写 人：
注    意：
***********************************************************************/
void CAN1_RX0_IRQHandler(void)
{
	unsigned int i = 0;
	INT8U err;
	CAN_Receive(CAN1, CAN_FIFO0, &CanMsg);
//	for(i = 0;i < 8;i ++)
//	{
//		CAN1_data[i] = 	CanMsg.Data[i];
//	}
	can1_rec_flag = 1;
	err = OSSemPost(sem_CAN_rec_flag);  //抛出一个信号量表示CAN1已经接收完成一帧数据
	CAN_ClearITPendingBit(CAN1,CAN_IT_FMP0);  /* 清除挂起中断 */
}

/***********************************************************************
函数名称：CAN_Mp3Play(uint8_t File_number,uint8_t vol)
功    能：播放MP3
输入参数：File_number 要播放的文件夹编号，vol音量
输出参数：
编写时间：
编 写 人：
注    意： 扩展数据帧，8字节长度，ID
***********************************************************************/
void CAN_Mp3Play(uint8_t File_number,uint8_t vol)
{
    CanTxMsg tx_message;
    
    tx_message.IDE = CAN_ID_STD;    //标准帧
    tx_message.RTR = CAN_RTR_DATA;  //远程帧
    tx_message.DLC = 0x08;          //帧长度为8
    
    
    tx_message.StdId = 0x0f1;      //帧ID为传入参数的CAN_ID
    tx_message.Data[0] = 0x01;
    tx_message.Data[1] = 0x51;
    tx_message.Data[2] = File_number;
    tx_message.Data[3] = vol;
    
    tx_message.Data[4] = 0;
    tx_message.Data[5] = 0;
    tx_message.Data[6] = tx_message.Data[0]^tx_message.Data[1]^tx_message.Data[2]^tx_message.Data[3]^tx_message.Data[4]^tx_message.Data[5];
    tx_message.Data[7] = 0x02; 
    can_tx_success_flag = 0;
    CAN_Transmit(CAN1,&tx_message);
    
    CAN_Time_Out = 0;
    while(can_tx_success_flag == 0)
    {
        CAN_Delay_Us(1);
        CAN_Time_Out++;
        if(CAN_Time_Out>100)
        {
            break;
        }
    }
}
/***********************************************************************
函数名称：CAN_Mp3Play(uint8_t File_number,uint8_t vol)
功    能：播放MP3
输入参数：File_number 要播放的文件夹编号，vol音量
输出参数：
编写时间：
编 写 人：
注    意： 扩展数据帧，8字节长度，ID
***********************************************************************/
void CAN_battery_basic(void)
{
    CanTxMsg tx_message;
    
    tx_message.IDE = CAN_ID_STD;    //标准帧
    tx_message.RTR = CAN_RTR_DATA;  //远程帧
    tx_message.DLC = 0x06;          //帧长度为8
    
    
    tx_message.StdId = 0x016;      //帧ID为传入参数的CAN_ID
    tx_message.Data[0] = 0x5A;
    tx_message.Data[1] = 0x03;
    tx_message.Data[2] = 0xA1;
    tx_message.Data[3] = 0x02;  
    tx_message.Data[4] = 0xF0;
    tx_message.Data[5] = 0x10; 
    can_tx_success_flag = 0;
    CAN_Transmit(CAN1,&tx_message);
    
    CAN_Time_Out = 0;
    while(can_tx_success_flag == 0)
    {
        CAN_Delay_Us(1);
        CAN_Time_Out++;
        if(CAN_Time_Out>100)
        {
            break;
        }
    }

}